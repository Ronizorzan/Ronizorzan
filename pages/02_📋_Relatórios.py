import streamlit as st
import numpy as np
from utilidades import *


#Configura√ß√£o da p√°gina
st.set_page_config(page_title="Avalia√ß√£o de Cr√©dito", layout="wide", initial_sidebar_state="expanded")


matrix_xgb = np.load("objects/confusion_xgb.npy", allow_pickle=False)
matrix_seq = np.load("objects/confusion_seq.npy", allow_pickle=False)
valor_medio_emprest = np.load("objects/valor_medio_emprest.npy")

resultado_xgb = calcular_metricas(matrix_xgb)
resultado_seq = calcular_metricas(matrix_seq)


# Controles da Barra Lateral
with st.sidebar:    

    st.title("Visualiza√ß√£o de Resultados")
    with st.expander("Configura√ß√µes das visualiza√ß√µes", expanded=True):    
        visualizacao = st.radio("Selecione o tipo de visualiza√ß√£o", ("Impacto Financeiro", "Redu√ß√£o da Inadimpl√™ncia",
                                                                      "Capta√ß√£o de Bons Clientes", "Taxa de Aprova√ß√£o"))
        if visualizacao == "Impacto Financeiro":
            taxa_juros = st.slider("Taxa m√©dia de juros", min_value=0, max_value=100, value=29,
                                   help="Selecione a taxa de juros cobrada por empr√©stimo\
                                    \ne veja como os valores se atualizam no gr√°fico") / 100
    visualizar = st.button("Visualizar")   

    st.markdown( # Rodap√© na barra lateral com as informa√ß√µes do desenvolvedor
        """
        <style>
        .footer {
        background-color: #f8f9fa;
        padding: 15px 20px;
        border-radius: 8px;
        text-align: center;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin-top: 40px;
        color: #343a40;
        }
        .footer a {
        margin: 0 15px;
        display: inline-block;
        }
        .footer img {
        height: 40px;
        width: auto;
        transition: transform 0.3s ease;
        }
        .footer img:hover {
        transform: scale(1.1);
        }
        </style>
        <div class="footer">
        <p><strong>Desenvolvido por: Ronivan</strong></p>
        <a href="https://github.com/Ronizorzan" target="_blank">
            <img src="https://img.icons8.com/ios-filled/50/000000/github.png" alt="GitHub">
        </a>
        <a href="https://www.linkedin.com/in/ronivan-zorzan-barbosa" target="_blank">
            <img src="https://img.icons8.com/color/48/000000/linkedin.png" alt="LinkedIn">
        </a>
        <a href="https://share.streamlit.io/user/ronizorzan" target="_blank">
            <img src="https://images.seeklogo.com/logo-png/44/1/streamlit-logo-png_seeklogo-441815.png" alt="Streamlit Community">
        </a>
        </div>
        """,
        unsafe_allow_html=True)


            

if visualizar:
    if visualizacao == "Impacto Financeiro": # Gr√°fico e relat√≥rio de impacto financeiro
        st.header("Impacto Financeiro")
        st.markdown("<hr style='border: 2px solid #008000'>", unsafe_allow_html=True)
        col1, col2 = st.columns([0.6,0.4], gap="large")
        with col1:
            resultados, figura_impacto = calcular_e_plotar_impacto(matrix_xgb, matrix_seq, valor_medio_emprest, taxa_juros)
            st.pyplot(figura_impacto, use_container_width=True)            

        with col2:
            st.markdown("<div style='font-size: 28px; font-weight: bold; color: #008000'>Relat√≥rio de Impacto Detalhado", unsafe_allow_html=True)
            st.write(resultados)
            diferenca_baseline = (resultados["Sequential"][2]) - (resultados["Baseline"][2])
            diferenca_xgb = (resultados["Sequential"][2]) - (resultados["XGB"][2])
            st.text(" ")
            st.success(f"Retorno do uso de Redes Neurais em rela√ß√£o ao atual cen√°rio:\
                        R$ {diferenca_baseline:,.2f} ")
            st.success(f"Retorno do uso de Redes Neurais em rela√ß√£o ao Modelo XGB:\
                        R$ {diferenca_xgb:,.2f} ")
            st.markdown("<hr style='border: 2px solid #008000'>", unsafe_allow_html=True)
            st.markdown("<div style='font-size: 26px; font-weight: bold; color: #008000'>Descri√ß√£o da visualiza√ß√£o ", unsafe_allow_html=True)
            st.markdown("<div style='font-size: 16px; font-weight: sans serif'>O gr√°fico ao labo traz uma an√°lise detalhada\
                        dos ganhos com bons pagadores, subtraindo-se as perdas com inadimpl√™ncia e poss√≠vel perda de clientes.\
                        Atrav√©s dele √© poss√≠vel ter uma estimativa real dos poss√≠veis\
                        retornos financeiros poss√≠veis com o uso de Redes Neurais comparado a um modelo menos preciso e \
                        tamb√©m ao cen√°rio atual da empresa que n√£o utiliza Intelig√™ncia Artificial na aprova√ß√£o dos seus clientes (baseline).", unsafe_allow_html=True)                                            
     
    if visualizacao == "Redu√ß√£o da Inadimpl√™ncia": # Gr√°fico e relat√≥rio de Inadimpl√™ncia
        st.header("Redu√ß√£o da Inadimpl√™ncia", anchor="red_inadimplencia")
        st.markdown("<hr style='border: 2px solid #2020df'>", unsafe_allow_html=True)
        col1, col2 = st.columns([0.6, 0.4], gap="medium")
        with col1:            
            figura_inad = plot_inadimplencia(resultado_xgb['inadimplencia_sem_modelos'], 
                                         resultado_xgb['inadimplencia_prevista'], resultado_seq['inadimplencia_prevista'])
            st.pyplot(figura_inad, use_container_width=True)
        
        with col2:
            st.markdown("<div style='font-size: 30px; font-weight: bold; color: #2020df'>Descri√ß√£o da visualiza√ß√£o", unsafe_allow_html=True)
            st.markdown("<div style='font-size: 20px; font-weight: bold'>Este gr√°fico compara tr√™s abordagens distintas e revela o poder dos modelos\
                         de intelig√™ncia artificial para transformar a gest√£o de risco e aumentar a rentabilidade nos neg√≥cios.", unsafe_allow_html=True)            
            
            st.markdown("<hr style='border: 2px solid #2020df'>", unsafe_allow_html=True) # Linha de separa√ß√£o

            st.markdown("<div style='font-size: 30px; font-weight: bold; color: #2020df'>Compara√ß√£o de Cen√°rios", unsafe_allow_html=True)
            st.markdown(f"<span style='font-size: 20px; font-weight: bold'>Taxa de Inadimpl√™ncia Atual atinge alarmantes: \t </span>\
                      <span style='color: red; font-size: 25px; font-weight: bold'> {resultado_xgb['inadimplencia_sem_modelos']}%</span>", unsafe_allow_html=True)
            st.markdown(f"<span style='font-size: 20px; font-weight: bold'>Taxa de Inadimpl√™ncia estimada com o uso do modelo mais\
                        eficaz (Redes Neurais) √© de apenas: </span> <span style='color: green; font-size: 25px; font-weight: bold'>\
                        \t {resultado_seq['inadimplencia_prevista']}0%</span>", unsafe_allow_html=True)
            
            st.markdown("<hr style='border: 2px solid #2020df'>", unsafe_allow_html=True) # Linha de separa√ß√£o

            st.markdown("<div style='font-size: 30px; font-weight: bold; color: #2020df'>Impacto final na Inadimpl√™ncia", unsafe_allow_html=True)
            st.markdown(f"<span style='font-size: 25px; font-weight: bold'>Redu√ß√£o total estimada na taxa de inadimpl√™ncia com o uso de Redes Neurais:</span>\
                     <span style='font-size: 30px; font-weight: bold; color: green'>\
                         -{round(resultado_seq['inadimplencia_sem_modelos'] - resultado_seq['inadimplencia_prevista'], 2)}%</span>", unsafe_allow_html=True)


    elif visualizacao == "Capta√ß√£o de Bons Clientes": # Gr√°fico e relat√≥rio de capta√ß√£o de bons clientes
        st.header("Capta√ß√£o de Bons Clientes")
        st.markdown("<hr style='border: 2px solid #2020df'>", unsafe_allow_html=True)
        col1, col2 = st.columns([0.6, 0.4], gap="large")
        with col1:
            figura2 = plot_captacao_bons_clientes(resultado_xgb["captacao_bons_clientes"], resultado_seq["captacao_bons_clientes"])        
            st.pyplot(figura2, use_container_width=True)
        with col2:
            st.markdown("<div style='font-size: 30px; font-weight: bold; color: #2020df'>Descri√ß√£o da visualiza√ß√£o", unsafe_allow_html=True)
            st.markdown("<div style=' font-size: 20px; font-weight:bold'>üèÜ O gr√°fico ao lado mostra a capacidade do modelo de identificar\
                        clientes de qualidade. Uma alta capta√ß√£o como a mostrada ao lado √© imprescind√≠vel \
                        pois pode significar maior qualidade na aprova√ß√£o e menos risco financeiro. ", unsafe_allow_html=True)            
            
            st.markdown("<hr style='border: 2px solid #2020df'>", unsafe_allow_html=True)
            st.markdown("<div style='font-size: 30px; font-weight: bold; color: #2020df'>Poss√≠vel abordagem alternativa", unsafe_allow_html=True)
            st.markdown("<div style=' font-size: 20px; font-weight:bold'>ü§ñ XGBoost ainda √© competitivo! Embora tenha ficado atr√°s," \
            " 88% de bons clientes captados ainda √© um excelente desempenho, mostrando que √°rvores de decis√£o otimizadas\
                  continuam sendo uma alternativa s√≥lida.", unsafe_allow_html=True)
            st.markdown("<hr style='border: 2px solid #2020df'>", unsafe_allow_html=True)

    
    elif visualizacao == "Taxa de Aprova√ß√£o": # Gr√°fico e relat√≥rio de taxa de aprova√ß√£o
        st.header("Taxa de Aprova√ß√£o")
        st.markdown("<hr style='border: 2px solid #2020df'>", unsafe_allow_html=True)
        col1, col2 = st.columns([0.6,0.4], gap="large")
        with col1:            
            figura3 = plot_aprovacao_reprovacao(resultado_xgb["taxa_aprovacao"], resultado_xgb['taxa_reprovacao'],
                                                 resultado_seq['taxa_aprovacao'], resultado_seq['taxa_reprovacao'])
            st.pyplot(figura3, use_container_width=True)
        with col2:            
            st.markdown("<div style='font-size: 30px; font-weight: bold; color: #2020df'>Descri√ß√£o da visualiza√ß√£o", unsafe_allow_html=True)                      
            st.markdown("<div style=' font-size: 20px; font-weight:bold'>O gr√°fico ao lado mostra a taxa de aprova√ß√£o \
                        de clientes. Note que Redes Neurais aprova menos clientes que XGBoost, mas \
                        ainda assim conseguiu captar uma maior quantidade de bons clientes e consequentemente reprovou\
                        clientes com alto risco de se tornar inadimplentes, o que traz grandes benef√≠cios, n√£o\
                        s√≥ na maior capta√ß√£o de recursos mas tamb√©m na preven√ß√£o de perdas</div>", unsafe_allow_html=True )
            st.markdown("<hr style='border: 2px solid #2020df'>", unsafe_allow_html=True)
            st.markdown("<div style='font-size: 30px; font-weight: bold; color: #2020df'>Taxa de Aprova√ß√£o dos Modelos", unsafe_allow_html=True)
            st.markdown(f"<div style=' font-size: 20px; font-weight:bold'>Redes Neurais aprovou {resultado_seq['taxa_aprovacao']}%\
                        dos clientes que solicitaram empr√©stimo enquanto XGB aprovou {resultado_xgb['taxa_aprovacao']}0% ", unsafe_allow_html=True)
                     
                       


